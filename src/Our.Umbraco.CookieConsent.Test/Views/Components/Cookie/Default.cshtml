@using Our.Umbraco.CookieConsent.Extensions
@using Our.Umbraco.CookieConsent.Interfaces
@using Our.Umbraco.CookieConsent.Models
@using Umbraco.Cms.Web.Common
@inject ICookieConsentService CookieConsentService
@inject UmbracoHelper UmbracoHelper
@{
    CookieConsentSettingsModel cookieSettings = CookieConsentService.GetSettings();

    var categories = new List<dynamic>();
    foreach (var property in typeof(CookieCategoriesModel).GetProperties())
    {
        var value = ((bool Enabled, bool ReadOnly))property.GetValue(cookieSettings.ApplicableCategories);
        if (value.Enabled)
        {
            var categoryName = property.Name;

            var sectionTitle = UmbracoHelper.GetDictionaryValue(
                string.Format(Translations.PreferencesModal.Sections.Title, categoryName)
            );
            var sectionDescr = UmbracoHelper.GetDictionaryValue(
                string.Format(Translations.PreferencesModal.Sections.Description, categoryName)
            );

            categories.Add(new
            {
                Name = categoryName,
                LowerName = categoryName.ToLower(),
                Title = sectionTitle,
                Description = sectionDescr,
                IsReadOnly = value.ReadOnly.ToString().ToLower()
            });
        }
    }
}
@if (cookieSettings is not null)
{
    <link rel="stylesheet" href="/libraries/cookieconsent-orestbida/cookieconsent.min.css" />
    <script src="/libraries/cookieconsent-orestbida/cookieconsent.umd.min.js"></script>
    <script>
        window.addEventListener('load', () => {
            CookieConsent.run({
                current_lang: '@System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName',
                autoclear_cookies: true,
                cookie_name: 'umbraco_cookieconsent',
                cookie_expiration: 31,
                guiOptions: {
                    consentModal: {
                        layout: "@cookieSettings?.GuiOptions.ConsentModalLayout.GetDisplayName()",
                        position: "@cookieSettings?.GuiOptions.ConsentModalPosition.GetDisplayName()",
                        equalWeightButtons: true,
                        flipButtons: false,
                        transition: 'slide'
                    },
                    preferencesModal: {
                        layout: "@cookieSettings?.GuiOptions.PreferencesModalLayout.GetDisplayName()",
                        position: "@cookieSettings?.GuiOptions.PreferencesModalPosition.GetDisplayName()",
                        equalWeightButtons: true,
                        flipButtons: false,
                    }
                },
                categories: {
                    @foreach (var category in categories)
                    {
                        <text>@category.LowerName: {
                            readOnly: @category.IsReadOnly,
                            enabled: true
                        },</text>
                    }
                },
                language: {
                    default: "@System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName",
                    translations: {
                        "@System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName": {
                            consentModal: {
                                title: "@UmbracoHelper.GetDictionaryValue(Translations.ConsentModal.Title)",
                                description: "@UmbracoHelper.GetDictionaryValue(Translations.ConsentModal.Description)",
                                acceptAllBtn: "@UmbracoHelper.GetDictionaryValue(Translations.ConsentModal.AcceptAll)",
                                rejectAllBtn: "@UmbracoHelper.GetDictionaryValue(Translations.ConsentModal.RejectAll)",
                                showPreferencesBtn: "@UmbracoHelper.GetDictionaryValue(Translations.ConsentModal.ManagePreferences)",
                                footer: "@UmbracoHelper.GetDictionaryValue(Translations.ConsentModal.Footer)"
                            },
                            preferencesModal: {
                                title: "@UmbracoHelper.GetDictionaryValue(Translations.PreferencesModal.Title)",
                                acceptAllBtn: "@UmbracoHelper.GetDictionaryValue(Translations.PreferencesModal.AcceptAll)",
                                rejectAllBtn: "@UmbracoHelper.GetDictionaryValue(Translations.PreferencesModal.RejectAll)",
                                savePreferencesBtn: "@UmbracoHelper.GetDictionaryValue(Translations.PreferencesModal.Save)",
                                closeIconLabel: "@UmbracoHelper.GetDictionaryValue(Translations.PreferencesModal.CloseIconLabel)",
                                serviceCounterLabel: "@UmbracoHelper.GetDictionaryValue(Translations.PreferencesModal.ServiceCounterLabel)",
                                sections: [
                                    @foreach (var category in categories)
                                    {
                                        <text>{
                                            title: "@category.Title",
                                            description: "@category.Description",
                                            linkedCategory: "@category.LowerName"
                                        },</text>
                                    }
                                ]
                            }
                        }
                    }
                }
            });
        });
    </script>
}